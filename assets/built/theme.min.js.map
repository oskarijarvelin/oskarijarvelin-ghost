{"version":3,"sources":["cards/audio.js","cards/gallery.js","cards/toggle.js","cards/video.js"],"names":["audioCardElements","document","querySelectorAll","let","i","length","audioElementContainer","audioPlayerContainer","querySelector","playIconContainer","pauseIconContainer","seekSlider","playbackRateContainer","muteIconContainer","unmuteIconContainer","volumeSlider","audio","durationContainer","currentTimeContainer","playbackRates","rate","label","raf","currentPlaybackRateIdx","whilePlaying","value","Math","floor","currentTime","textContent","calculateTime","style","setProperty","max","requestAnimationFrame","showRangeProgress","rangeInput","minutes","secs","seconds","displayDuration","duration","setSliderMax","displayBufferedAmount","bufferedAmount","buffered","end","readyState","addEventListener","classList","add","remove","play","pause","cancelAnimationFrame","muted","nextPlaybackRate","playbackRate","e","target","paused","volume","handleAudioPlayer","images","forEach","image","container","closest","width","attributes","height","flex","toggleHeadingElements","getElementsByClassName","toggleFn","event","targetElement","parentElement","getAttribute","setAttribute","videoCardElements","videoElementContainer","videoPlayer","videoPlayerContainer","videoEl","largePlayIcon","videoOverlay","loop","autoplay","onmouseover","onmouseleave","ended","handleOnPause","handleOnPlay","onplay","stopPropagation","handleVideoPlayer"],"mappings":"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","file":"theme.min.js","sourcesContent":["(function() {\r\n    const handleAudioPlayer = function (audioElementContainer) {\r\n        const audioPlayerContainer = audioElementContainer.querySelector('.kg-audio-player-container');\r\n        const playIconContainer = audioElementContainer.querySelector('.kg-audio-play-icon');\r\n        const pauseIconContainer = audioElementContainer.querySelector('.kg-audio-pause-icon');\r\n        const seekSlider = audioElementContainer.querySelector('.kg-audio-seek-slider');\r\n        const playbackRateContainer = audioElementContainer.querySelector('.kg-audio-playback-rate');\r\n        const muteIconContainer = audioElementContainer.querySelector('.kg-audio-mute-icon');\r\n        const unmuteIconContainer = audioElementContainer.querySelector('.kg-audio-unmute-icon');\r\n        const volumeSlider = audioElementContainer.querySelector('.kg-audio-volume-slider');\r\n        const audio = audioElementContainer.querySelector('audio');\r\n        const durationContainer = audioElementContainer.querySelector('.kg-audio-duration');\r\n        const currentTimeContainer = audioElementContainer.querySelector('.kg-audio-current-time');\r\n        let playbackRates = [{\r\n            rate: 0.75,\r\n            label: '0.7×'\r\n        }, {\r\n            rate: 1.0,\r\n            label: '1×'\r\n        }, {\r\n            rate: 1.25,\r\n            label: '1.2×'\r\n        }, {\r\n            rate: 1.75,\r\n            label: '1.7×'\r\n        }, {\r\n            rate: 2.0,\r\n            label: '2×'\r\n        }];\r\n\r\n        let raf = null;\r\n        let currentPlaybackRateIdx = 1;\r\n\r\n        const whilePlaying = () => {\r\n            seekSlider.value = Math.floor(audio.currentTime);\r\n            currentTimeContainer.textContent = calculateTime(seekSlider.value);\r\n            audioPlayerContainer.style.setProperty('--seek-before-width', `${seekSlider.value / seekSlider.max * 100}%`);\r\n            raf = requestAnimationFrame(whilePlaying);\r\n        }\r\n\r\n        const showRangeProgress = (rangeInput) => {\r\n            if (rangeInput === seekSlider) {\r\n                audioPlayerContainer.style.setProperty('--seek-before-width', rangeInput.value / rangeInput.max * 100 + '%');\r\n            }\r\n            else {\r\n                audioPlayerContainer.style.setProperty('--volume-before-width', rangeInput.value / rangeInput.max * 100 + '%');\r\n            }\r\n        }\r\n\r\n        const calculateTime = (secs) => {\r\n            const minutes = Math.floor(secs / 60);\r\n            const seconds = Math.floor(secs % 60);\r\n            const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\r\n            return `${minutes}:${returnedSeconds}`;\r\n        }\r\n\r\n        const displayDuration = () => {\r\n            durationContainer.textContent = calculateTime(audio.duration);\r\n        }\r\n\r\n        const setSliderMax = () => {\r\n            seekSlider.max = Math.floor(audio.duration);\r\n        }\r\n\r\n        const displayBufferedAmount = () => {\r\n            if (audio.buffered.length > 0) {\r\n                const bufferedAmount = Math.floor(audio.buffered.end(audio.buffered.length - 1));\r\n                audioPlayerContainer.style.setProperty('--buffered-width', `${(bufferedAmount / seekSlider.max) * 100}%`);\r\n            }\r\n        }\r\n\r\n        if (audio.readyState > 0) {\r\n            displayDuration();\r\n            setSliderMax();\r\n            displayBufferedAmount();\r\n        } else {\r\n            audio.addEventListener('loadedmetadata', () => {\r\n                displayDuration();\r\n                setSliderMax();\r\n                displayBufferedAmount();\r\n            });\r\n        }\r\n\r\n        playIconContainer.addEventListener('click', () => {\r\n            playIconContainer.classList.add(\"kg-audio-hide\");\r\n            pauseIconContainer.classList.remove(\"kg-audio-hide\");\r\n            audio.play();\r\n            requestAnimationFrame(whilePlaying);\r\n        });\r\n\r\n        pauseIconContainer.addEventListener('click', () => {\r\n            pauseIconContainer.classList.add(\"kg-audio-hide\");\r\n            playIconContainer.classList.remove(\"kg-audio-hide\");\r\n            audio.pause();\r\n            cancelAnimationFrame(raf);\r\n        });\r\n\r\n        muteIconContainer.addEventListener('click', () => {\r\n            muteIconContainer.classList.add(\"kg-audio-hide\");\r\n            unmuteIconContainer.classList.remove(\"kg-audio-hide\");\r\n            audio.muted = false;\r\n        });\r\n\r\n        unmuteIconContainer.addEventListener('click', () => {\r\n            unmuteIconContainer.classList.add(\"kg-audio-hide\");\r\n            muteIconContainer.classList.remove(\"kg-audio-hide\");\r\n            audio.muted = true;\r\n        });\r\n\r\n        playbackRateContainer.addEventListener('click', () => {\r\n            let nextPlaybackRate = playbackRates[(currentPlaybackRateIdx + 1) % 5];\r\n            currentPlaybackRateIdx = currentPlaybackRateIdx + 1;\r\n            audio.playbackRate = nextPlaybackRate.rate;\r\n            playbackRateContainer.textContent = nextPlaybackRate.label;\r\n        });\r\n\r\n        audio.addEventListener('progress', displayBufferedAmount);\r\n\r\n        seekSlider.addEventListener('input', (e) => {\r\n            showRangeProgress(e.target);\r\n            currentTimeContainer.textContent = calculateTime(seekSlider.value);\r\n            if (!audio.paused) {\r\n                cancelAnimationFrame(raf);\r\n            }\r\n        });\r\n\r\n        seekSlider.addEventListener('change', () => {\r\n            audio.currentTime = seekSlider.value;\r\n            if (!audio.paused) {\r\n                requestAnimationFrame(whilePlaying);\r\n            }\r\n        });\r\n\r\n        volumeSlider.addEventListener('input', (e) => {\r\n            const value = e.target.value;\r\n            showRangeProgress(e.target);\r\n            audio.volume = value / 100;\r\n        });\r\n    }\r\n\r\n    const audioCardElements = document.querySelectorAll('.kg-audio-card');\r\n\r\n    for (let i = 0; i < audioCardElements.length; i++) {\r\n        handleAudioPlayer(audioCardElements[i]);\r\n    }\r\n})();","(function() {\r\n    const images = document.querySelectorAll('.kg-gallery-image img');\r\n    images.forEach(function (image) {\r\n        const container = image.closest('.kg-gallery-image');\r\n        const width = image.attributes.width.value;\r\n        const height = image.attributes.height.value;\r\n        const ratio = width / height;\r\n        container.style.flex = ratio + ' 1 0%';\r\n    })\r\n})();","(function() {\r\n    const toggleHeadingElements = document.getElementsByClassName(\"kg-toggle-heading\");\r\n\r\n    const toggleFn = function(event) {\r\n        const targetElement = event.target;\r\n        const parentElement = targetElement.closest('.kg-toggle-card');\r\n        var toggleState = parentElement.getAttribute(\"data-kg-toggle-state\");\r\n        if (toggleState === 'close') {\r\n            parentElement.setAttribute('data-kg-toggle-state', 'open');\r\n        } else {\r\n            parentElement.setAttribute('data-kg-toggle-state', 'close');\r\n        }\r\n    };\r\n\r\n    for (let i = 0; i < toggleHeadingElements.length; i++) {\r\n        toggleHeadingElements[i].addEventListener('click', toggleFn, false);\r\n    }\r\n})();","(function() {\r\n    const handleVideoPlayer = function (videoElementContainer) {\r\n        const videoPlayer = videoElementContainer.querySelector('.kg-video-player');\r\n        const videoPlayerContainer = videoElementContainer.querySelector('.kg-video-player-container');\r\n        const playIconContainer = videoElementContainer.querySelector('.kg-video-play-icon');\r\n        const pauseIconContainer = videoElementContainer.querySelector('.kg-video-pause-icon');\r\n        const seekSlider = videoElementContainer.querySelector('.kg-video-seek-slider');\r\n        const playbackRateContainer = videoElementContainer.querySelector('.kg-video-playback-rate');\r\n        const muteIconContainer = videoElementContainer.querySelector('.kg-video-mute-icon');\r\n        const unmuteIconContainer = videoElementContainer.querySelector('.kg-video-unmute-icon');\r\n        const volumeSlider = videoElementContainer.querySelector('.kg-video-volume-slider');\r\n        const videoEl = videoElementContainer.querySelector('video');\r\n        const durationContainer = videoElementContainer.querySelector('.kg-video-duration');\r\n        const currentTimeContainer = videoElementContainer.querySelector('.kg-video-current-time');\r\n        const largePlayIcon = videoElementContainer.querySelector('.kg-video-large-play-icon');\r\n        const videoOverlay = videoElementContainer.querySelector('.kg-video-overlay');\r\n        let playbackRates = [{\r\n            rate: 0.75,\r\n            label: '0.7×'\r\n        }, {\r\n            rate: 1.0,\r\n            label: '1×'\r\n        }, {\r\n            rate: 1.25,\r\n            label: '1.2×'\r\n        }, {\r\n            rate: 1.75,\r\n            label: '1.7×'\r\n        }, {\r\n            rate: 2.0,\r\n            label: '2×'\r\n        }];\r\n\r\n        let raf = null;\r\n        let currentPlaybackRateIdx = 1;\r\n        if (!!videoEl.loop) {\r\n            largePlayIcon.classList.add(\"kg-video-hide-animated\");\r\n            videoOverlay.classList.add(\"kg-video-hide-animated\");\r\n        }\r\n        const whilePlaying = () => {\r\n            seekSlider.value = Math.floor(videoEl.currentTime);\r\n            currentTimeContainer.textContent = calculateTime(seekSlider.value);\r\n            videoPlayer.style.setProperty('--seek-before-width', `${seekSlider.value / seekSlider.max * 100}%`);\r\n            raf = requestAnimationFrame(whilePlaying);\r\n        }\r\n\r\n        const showRangeProgress = (rangeInput) => {\r\n            if (rangeInput === seekSlider) {\r\n                videoPlayer.style.setProperty('--seek-before-width', rangeInput.value / rangeInput.max * 100 + '%');\r\n            }\r\n            else {\r\n                videoPlayer.style.setProperty('--volume-before-width', rangeInput.value / rangeInput.max * 100 + '%');\r\n            }\r\n        }\r\n\r\n        const calculateTime = (secs) => {\r\n            const minutes = Math.floor(secs / 60);\r\n            const seconds = Math.floor(secs % 60);\r\n            const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\r\n            return `${minutes}:${returnedSeconds}`;\r\n        }\r\n\r\n        const displayDuration = () => {\r\n            durationContainer.textContent = calculateTime(videoEl.duration);\r\n        }\r\n\r\n        const setSliderMax = () => {\r\n            seekSlider.max = Math.floor(videoEl.duration);\r\n        }\r\n\r\n        const displayBufferedAmount = () => {\r\n            if (videoEl.buffered.length > 0) {\r\n                const bufferedAmount = Math.floor(videoEl.buffered.end(videoEl.buffered.length - 1));\r\n                videoPlayer.style.setProperty('--buffered-width', `${(bufferedAmount / seekSlider.max) * 100}%`);\r\n            }\r\n        }\r\n\r\n        if (videoEl.readyState > 0) {\r\n            displayDuration();\r\n            setSliderMax();\r\n            displayBufferedAmount();\r\n            if (videoEl.autoplay) {\r\n                raf = requestAnimationFrame(whilePlaying);\r\n                playIconContainer.classList.add(\"kg-video-hide\");\r\n                pauseIconContainer.classList.remove(\"kg-video-hide\");\r\n            }\r\n            if (videoEl.muted) {\r\n                unmuteIconContainer.classList.add(\"kg-video-hide\");\r\n                muteIconContainer.classList.remove(\"kg-video-hide\");\r\n            }\r\n        } else {\r\n            videoEl.addEventListener('loadedmetadata', () => {\r\n                displayDuration();\r\n                setSliderMax();\r\n                displayBufferedAmount();\r\n                if (videoEl.autoplay) {\r\n                    raf = requestAnimationFrame(whilePlaying);\r\n                    playIconContainer.classList.add(\"kg-video-hide\");\r\n                    pauseIconContainer.classList.remove(\"kg-video-hide\");\r\n                }\r\n                if (videoEl.muted) {\r\n                    unmuteIconContainer.classList.add(\"kg-video-hide\");\r\n                    muteIconContainer.classList.remove(\"kg-video-hide\");\r\n                }\r\n            });\r\n        }\r\n\r\n        videoElementContainer.onmouseover = () => {\r\n            if (!videoEl.loop) {\r\n                videoPlayerContainer.classList.remove(\"kg-video-hide-animated\");\r\n            }\r\n        }\r\n\r\n        videoElementContainer.onmouseleave = () => {\r\n            const isPlaying = !!(videoEl.currentTime > 0 && !videoEl.paused && !videoEl.ended && videoEl.readyState > 2);\r\n            if (isPlaying) {\r\n                videoPlayerContainer.classList.add(\"kg-video-hide-animated\");\r\n            }\r\n        }\r\n\r\n        videoElementContainer.addEventListener('click', () => {\r\n            if (!videoEl.loop) {\r\n                const isPlaying = !!(videoEl.currentTime > 0 && !videoEl.paused && !videoEl.ended && videoEl.readyState > 2);\r\n                if (isPlaying) {\r\n                    handleOnPause();\r\n                } else {\r\n                    handleOnPlay();\r\n                }\r\n            }\r\n        });\r\n\r\n        videoEl.onplay = () => {\r\n            largePlayIcon.classList.add(\"kg-video-hide-animated\");\r\n            videoOverlay.classList.add(\"kg-video-hide-animated\");\r\n            playIconContainer.classList.add(\"kg-video-hide\");\r\n            pauseIconContainer.classList.remove(\"kg-video-hide\");\r\n        };\r\n\r\n        const handleOnPlay = () => {\r\n            largePlayIcon.classList.add(\"kg-video-hide-animated\");\r\n            videoOverlay.classList.add(\"kg-video-hide-animated\");\r\n            playIconContainer.classList.add(\"kg-video-hide\");\r\n            pauseIconContainer.classList.remove(\"kg-video-hide\");\r\n            videoEl.play();\r\n            raf = requestAnimationFrame(whilePlaying);\r\n        }\r\n\r\n        const handleOnPause = () => {\r\n            pauseIconContainer.classList.add(\"kg-video-hide\");\r\n            playIconContainer.classList.remove(\"kg-video-hide\");\r\n            videoEl.pause();\r\n            cancelAnimationFrame(raf);\r\n        }\r\n\r\n        largePlayIcon.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            handleOnPlay();\r\n        });\r\n\r\n        playIconContainer.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            handleOnPlay();\r\n        });\r\n\r\n        pauseIconContainer.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            handleOnPause();\r\n        });\r\n\r\n        muteIconContainer.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            muteIconContainer.classList.add(\"kg-video-hide\");\r\n            unmuteIconContainer.classList.remove(\"kg-video-hide\");\r\n            videoEl.muted = false;\r\n        });\r\n\r\n        unmuteIconContainer.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            unmuteIconContainer.classList.add(\"kg-video-hide\");\r\n            muteIconContainer.classList.remove(\"kg-video-hide\");\r\n            videoEl.muted = true;\r\n        });\r\n\r\n        playbackRateContainer.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            let nextPlaybackRate = playbackRates[(currentPlaybackRateIdx + 1) % 5];\r\n            currentPlaybackRateIdx = currentPlaybackRateIdx + 1;\r\n            videoEl.playbackRate = nextPlaybackRate.rate;\r\n            playbackRateContainer.textContent = nextPlaybackRate.label;\r\n        });\r\n\r\n        videoEl.addEventListener('progress', displayBufferedAmount);\r\n\r\n        seekSlider.addEventListener('input', (e) => {\r\n            e.stopPropagation();\r\n            showRangeProgress(e.target);\r\n            currentTimeContainer.textContent = calculateTime(seekSlider.value);\r\n            if (!videoEl.paused) {\r\n                cancelAnimationFrame(raf);\r\n            }\r\n        });\r\n\r\n        seekSlider.addEventListener('change', (event) => {\r\n            event.stopPropagation();\r\n            videoEl.currentTime = seekSlider.value;\r\n            if (!videoEl.paused) {\r\n                requestAnimationFrame(whilePlaying);\r\n            }\r\n        });\r\n\r\n        volumeSlider.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n        });\r\n\r\n        seekSlider.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n        });\r\n\r\n        volumeSlider.addEventListener('input', (e) => {\r\n            e.stopPropagation();\r\n            const value = e.target.value;\r\n            showRangeProgress(e.target);\r\n            videoEl.volume = value / 100;\r\n        });\r\n    }\r\n\r\n    const videoCardElements = document.querySelectorAll('.kg-video-card');\r\n\r\n    for (let i = 0; i < videoCardElements.length; i++) {\r\n        handleVideoPlayer(videoCardElements[i]);\r\n    }\r\n})();"]}