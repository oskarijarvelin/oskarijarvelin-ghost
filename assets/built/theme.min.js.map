{"version":3,"sources":["embed.js","infinite-scroll.js","cards/audio.js","cards/gallery.js","cards/toggle.js","cards/video.js"],"names":["frames","document","getElementsByTagName","i","length","getAttribute","includes","closest","classList","add","window","feedElement","buffer","ticking","loading","lastScrollY","lastWindowHeight","lastDocumentHeight","nextElement","querySelector","onPageLoad","this","status","removeEventListener","onScroll","onResize","response","querySelectorAll","forEach","item","appendChild","importNode","resNextElement","href","documentElement","scrollHeight","onUpdate","xhr","XMLHttpRequest","responseType","addEventListener","open","send","requestTick","requestAnimationFrame","scrollY","innerHeight","passive","audioCardElements","let","audioElementContainer","audioPlayerContainer","playIconContainer","pauseIconContainer","seekSlider","playbackRateContainer","muteIconContainer","unmuteIconContainer","volumeSlider","audio","durationContainer","currentTimeContainer","playbackRates","rate","label","raf","currentPlaybackRateIdx","whilePlaying","value","Math","floor","currentTime","textContent","calculateTime","style","setProperty","max","showRangeProgress","rangeInput","minutes","secs","seconds","displayDuration","duration","setSliderMax","displayBufferedAmount","bufferedAmount","buffered","end","readyState","remove","play","pause","cancelAnimationFrame","muted","nextPlaybackRate","playbackRate","e","target","paused","volume","handleAudioPlayer","images","image","container","width","attributes","height","flex","toggleHeadingElements","getElementsByClassName","toggleFn","event","targetElement","parentElement","setAttribute","videoCardElements","videoElementContainer","videoPlayer","videoPlayerContainer","videoEl","largePlayIcon","videoOverlay","loop","autoplay","onmouseover","onmouseleave","ended","handleOnPause","handleOnPlay","onplay","stopPropagation","handleVideoPlayer"],"mappings":"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","file":"theme.min.js","sourcesContent":["var i, frames;\r\nframes = document.getElementsByTagName(\"iframe\");\r\nfor (i = 0; i < frames.length; ++i) {\r\n    if (frames[i].getAttribute(\"src\").includes('youtu')) {\r\n        frames[i].closest('.kg-embed-card').classList.add('kg-embed-youtube-card');\r\n    }\r\n}","/* eslint-env browser */\r\n\r\n/**\r\n * Infinite Scroll\r\n * Used on all pages where there is a list of posts (homepage, tag index, etc).\r\n *\r\n * When the page is scrolled to 300px from the bottom, the next page of posts\r\n * is fetched by following the the <link rel=\"next\" href=\"...\"> that is output\r\n * by {{ghost_head}}.\r\n *\r\n * The individual post items are extracted from the fetched pages by looking for\r\n * a wrapper element with the class \"post-card\". Any found elements are appended\r\n * to the element with the class \"post-feed\" in the currently viewed page.\r\n */\r\n\r\n (function (window, document) {\r\n    // next link element\r\n    var nextElement = document.querySelector('link[rel=next]');\r\n    if (!nextElement) {\r\n        return;\r\n    }\r\n\r\n    // post feed element\r\n    var feedElement = document.querySelector('.article-list__wrapper');\r\n    if (!feedElement) {\r\n        return;\r\n    }\r\n\r\n    var buffer = 300;\r\n\r\n    var ticking = false;\r\n    var loading = false;\r\n\r\n    var lastScrollY = window.scrollY;\r\n    var lastWindowHeight = window.innerHeight;\r\n    var lastDocumentHeight = document.documentElement.scrollHeight;\r\n\r\n    function onPageLoad() {\r\n        if (this.status === 404) {\r\n            window.removeEventListener('scroll', onScroll);\r\n            window.removeEventListener('resize', onResize);\r\n            return;\r\n        }\r\n\r\n        // append contents\r\n        var postElements = this.response.querySelectorAll('article.post-card');\r\n        postElements.forEach(function (item) {\r\n            // document.importNode is important, without it the item's owner\r\n            // document will be different which can break resizing of\r\n            // `object-fit: cover` images in Safari\r\n            feedElement.appendChild(document.importNode(item, true));\r\n        });\r\n\r\n        // set next link\r\n        var resNextElement = this.response.querySelector('link[rel=next]');\r\n        if (resNextElement) {\r\n            nextElement.href = resNextElement.href;\r\n        } else {\r\n            window.removeEventListener('scroll', onScroll);\r\n            window.removeEventListener('resize', onResize);\r\n        }\r\n\r\n        // sync status\r\n        lastDocumentHeight = document.documentElement.scrollHeight;\r\n        ticking = false;\r\n        loading = false;\r\n    }\r\n\r\n    function onUpdate() {\r\n        // return if already loading\r\n        if (loading) {\r\n            return;\r\n        }\r\n\r\n        // return if not scroll to the bottom\r\n        if (lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\r\n            ticking = false;\r\n            return;\r\n        }\r\n\r\n        loading = true;\r\n\r\n        var xhr = new window.XMLHttpRequest();\r\n        xhr.responseType = 'document';\r\n\r\n        xhr.addEventListener('load', onPageLoad);\r\n\r\n        xhr.open('GET', nextElement.href);\r\n        xhr.send(null);\r\n    }\r\n\r\n    function requestTick() {\r\n        ticking || window.requestAnimationFrame(onUpdate);\r\n        ticking = true;\r\n    }\r\n\r\n    function onScroll() {\r\n        lastScrollY = window.scrollY;\r\n        requestTick();\r\n    }\r\n\r\n    function onResize() {\r\n        lastWindowHeight = window.innerHeight;\r\n        lastDocumentHeight = document.documentElement.scrollHeight;\r\n        requestTick();\r\n    }\r\n\r\n    window.addEventListener('scroll', onScroll, {passive: true});\r\n    window.addEventListener('resize', onResize);\r\n\r\n    requestTick();\r\n})(window, document);","(function() {\r\n    const handleAudioPlayer = function (audioElementContainer) {\r\n        const audioPlayerContainer = audioElementContainer.querySelector('.kg-audio-player-container');\r\n        const playIconContainer = audioElementContainer.querySelector('.kg-audio-play-icon');\r\n        const pauseIconContainer = audioElementContainer.querySelector('.kg-audio-pause-icon');\r\n        const seekSlider = audioElementContainer.querySelector('.kg-audio-seek-slider');\r\n        const playbackRateContainer = audioElementContainer.querySelector('.kg-audio-playback-rate');\r\n        const muteIconContainer = audioElementContainer.querySelector('.kg-audio-mute-icon');\r\n        const unmuteIconContainer = audioElementContainer.querySelector('.kg-audio-unmute-icon');\r\n        const volumeSlider = audioElementContainer.querySelector('.kg-audio-volume-slider');\r\n        const audio = audioElementContainer.querySelector('audio');\r\n        const durationContainer = audioElementContainer.querySelector('.kg-audio-duration');\r\n        const currentTimeContainer = audioElementContainer.querySelector('.kg-audio-current-time');\r\n        let playbackRates = [{\r\n            rate: 0.75,\r\n            label: '0.7×'\r\n        }, {\r\n            rate: 1.0,\r\n            label: '1×'\r\n        }, {\r\n            rate: 1.25,\r\n            label: '1.2×'\r\n        }, {\r\n            rate: 1.75,\r\n            label: '1.7×'\r\n        }, {\r\n            rate: 2.0,\r\n            label: '2×'\r\n        }];\r\n\r\n        let raf = null;\r\n        let currentPlaybackRateIdx = 1;\r\n\r\n        const whilePlaying = () => {\r\n            seekSlider.value = Math.floor(audio.currentTime);\r\n            currentTimeContainer.textContent = calculateTime(seekSlider.value);\r\n            audioPlayerContainer.style.setProperty('--seek-before-width', `${seekSlider.value / seekSlider.max * 100}%`);\r\n            raf = requestAnimationFrame(whilePlaying);\r\n        }\r\n\r\n        const showRangeProgress = (rangeInput) => {\r\n            if (rangeInput === seekSlider) {\r\n                audioPlayerContainer.style.setProperty('--seek-before-width', rangeInput.value / rangeInput.max * 100 + '%');\r\n            }\r\n            else {\r\n                audioPlayerContainer.style.setProperty('--volume-before-width', rangeInput.value / rangeInput.max * 100 + '%');\r\n            }\r\n        }\r\n\r\n        const calculateTime = (secs) => {\r\n            const minutes = Math.floor(secs / 60);\r\n            const seconds = Math.floor(secs % 60);\r\n            const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\r\n            return `${minutes}:${returnedSeconds}`;\r\n        }\r\n\r\n        const displayDuration = () => {\r\n            durationContainer.textContent = calculateTime(audio.duration);\r\n        }\r\n\r\n        const setSliderMax = () => {\r\n            seekSlider.max = Math.floor(audio.duration);\r\n        }\r\n\r\n        const displayBufferedAmount = () => {\r\n            if (audio.buffered.length > 0) {\r\n                const bufferedAmount = Math.floor(audio.buffered.end(audio.buffered.length - 1));\r\n                audioPlayerContainer.style.setProperty('--buffered-width', `${(bufferedAmount / seekSlider.max) * 100}%`);\r\n            }\r\n        }\r\n\r\n        if (audio.readyState > 0) {\r\n            displayDuration();\r\n            setSliderMax();\r\n            displayBufferedAmount();\r\n        } else {\r\n            audio.addEventListener('loadedmetadata', () => {\r\n                displayDuration();\r\n                setSliderMax();\r\n                displayBufferedAmount();\r\n            });\r\n        }\r\n\r\n        playIconContainer.addEventListener('click', () => {\r\n            playIconContainer.classList.add(\"kg-audio-hide\");\r\n            pauseIconContainer.classList.remove(\"kg-audio-hide\");\r\n            audio.play();\r\n            requestAnimationFrame(whilePlaying);\r\n        });\r\n\r\n        pauseIconContainer.addEventListener('click', () => {\r\n            pauseIconContainer.classList.add(\"kg-audio-hide\");\r\n            playIconContainer.classList.remove(\"kg-audio-hide\");\r\n            audio.pause();\r\n            cancelAnimationFrame(raf);\r\n        });\r\n\r\n        muteIconContainer.addEventListener('click', () => {\r\n            muteIconContainer.classList.add(\"kg-audio-hide\");\r\n            unmuteIconContainer.classList.remove(\"kg-audio-hide\");\r\n            audio.muted = false;\r\n        });\r\n\r\n        unmuteIconContainer.addEventListener('click', () => {\r\n            unmuteIconContainer.classList.add(\"kg-audio-hide\");\r\n            muteIconContainer.classList.remove(\"kg-audio-hide\");\r\n            audio.muted = true;\r\n        });\r\n\r\n        playbackRateContainer.addEventListener('click', () => {\r\n            let nextPlaybackRate = playbackRates[(currentPlaybackRateIdx + 1) % 5];\r\n            currentPlaybackRateIdx = currentPlaybackRateIdx + 1;\r\n            audio.playbackRate = nextPlaybackRate.rate;\r\n            playbackRateContainer.textContent = nextPlaybackRate.label;\r\n        });\r\n\r\n        audio.addEventListener('progress', displayBufferedAmount);\r\n\r\n        seekSlider.addEventListener('input', (e) => {\r\n            showRangeProgress(e.target);\r\n            currentTimeContainer.textContent = calculateTime(seekSlider.value);\r\n            if (!audio.paused) {\r\n                cancelAnimationFrame(raf);\r\n            }\r\n        });\r\n\r\n        seekSlider.addEventListener('change', () => {\r\n            audio.currentTime = seekSlider.value;\r\n            if (!audio.paused) {\r\n                requestAnimationFrame(whilePlaying);\r\n            }\r\n        });\r\n\r\n        volumeSlider.addEventListener('input', (e) => {\r\n            const value = e.target.value;\r\n            showRangeProgress(e.target);\r\n            audio.volume = value / 100;\r\n        });\r\n    }\r\n\r\n    const audioCardElements = document.querySelectorAll('.kg-audio-card');\r\n\r\n    for (let i = 0; i < audioCardElements.length; i++) {\r\n        handleAudioPlayer(audioCardElements[i]);\r\n    }\r\n})();","(function() {\r\n    const images = document.querySelectorAll('.kg-gallery-image img');\r\n    images.forEach(function (image) {\r\n        const container = image.closest('.kg-gallery-image');\r\n        const width = image.attributes.width.value;\r\n        const height = image.attributes.height.value;\r\n        const ratio = width / height;\r\n        container.style.flex = ratio + ' 1 0%';\r\n    })\r\n})();","(function() {\r\n    const toggleHeadingElements = document.getElementsByClassName(\"kg-toggle-heading\");\r\n\r\n    const toggleFn = function(event) {\r\n        const targetElement = event.target;\r\n        const parentElement = targetElement.closest('.kg-toggle-card');\r\n        var toggleState = parentElement.getAttribute(\"data-kg-toggle-state\");\r\n        if (toggleState === 'close') {\r\n            parentElement.setAttribute('data-kg-toggle-state', 'open');\r\n        } else {\r\n            parentElement.setAttribute('data-kg-toggle-state', 'close');\r\n        }\r\n    };\r\n\r\n    for (let i = 0; i < toggleHeadingElements.length; i++) {\r\n        toggleHeadingElements[i].addEventListener('click', toggleFn, false);\r\n    }\r\n})();","(function() {\r\n    const handleVideoPlayer = function (videoElementContainer) {\r\n        const videoPlayer = videoElementContainer.querySelector('.kg-video-player');\r\n        const videoPlayerContainer = videoElementContainer.querySelector('.kg-video-player-container');\r\n        const playIconContainer = videoElementContainer.querySelector('.kg-video-play-icon');\r\n        const pauseIconContainer = videoElementContainer.querySelector('.kg-video-pause-icon');\r\n        const seekSlider = videoElementContainer.querySelector('.kg-video-seek-slider');\r\n        const playbackRateContainer = videoElementContainer.querySelector('.kg-video-playback-rate');\r\n        const muteIconContainer = videoElementContainer.querySelector('.kg-video-mute-icon');\r\n        const unmuteIconContainer = videoElementContainer.querySelector('.kg-video-unmute-icon');\r\n        const volumeSlider = videoElementContainer.querySelector('.kg-video-volume-slider');\r\n        const videoEl = videoElementContainer.querySelector('video');\r\n        const durationContainer = videoElementContainer.querySelector('.kg-video-duration');\r\n        const currentTimeContainer = videoElementContainer.querySelector('.kg-video-current-time');\r\n        const largePlayIcon = videoElementContainer.querySelector('.kg-video-large-play-icon');\r\n        const videoOverlay = videoElementContainer.querySelector('.kg-video-overlay');\r\n        let playbackRates = [{\r\n            rate: 0.75,\r\n            label: '0.7×'\r\n        }, {\r\n            rate: 1.0,\r\n            label: '1×'\r\n        }, {\r\n            rate: 1.25,\r\n            label: '1.2×'\r\n        }, {\r\n            rate: 1.75,\r\n            label: '1.7×'\r\n        }, {\r\n            rate: 2.0,\r\n            label: '2×'\r\n        }];\r\n\r\n        let raf = null;\r\n        let currentPlaybackRateIdx = 1;\r\n        if (!!videoEl.loop) {\r\n            largePlayIcon.classList.add(\"kg-video-hide-animated\");\r\n            videoOverlay.classList.add(\"kg-video-hide-animated\");\r\n        }\r\n        const whilePlaying = () => {\r\n            seekSlider.value = Math.floor(videoEl.currentTime);\r\n            currentTimeContainer.textContent = calculateTime(seekSlider.value);\r\n            videoPlayer.style.setProperty('--seek-before-width', `${seekSlider.value / seekSlider.max * 100}%`);\r\n            raf = requestAnimationFrame(whilePlaying);\r\n        }\r\n\r\n        const showRangeProgress = (rangeInput) => {\r\n            if (rangeInput === seekSlider) {\r\n                videoPlayer.style.setProperty('--seek-before-width', rangeInput.value / rangeInput.max * 100 + '%');\r\n            }\r\n            else {\r\n                videoPlayer.style.setProperty('--volume-before-width', rangeInput.value / rangeInput.max * 100 + '%');\r\n            }\r\n        }\r\n\r\n        const calculateTime = (secs) => {\r\n            const minutes = Math.floor(secs / 60);\r\n            const seconds = Math.floor(secs % 60);\r\n            const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\r\n            return `${minutes}:${returnedSeconds}`;\r\n        }\r\n\r\n        const displayDuration = () => {\r\n            durationContainer.textContent = calculateTime(videoEl.duration);\r\n        }\r\n\r\n        const setSliderMax = () => {\r\n            seekSlider.max = Math.floor(videoEl.duration);\r\n        }\r\n\r\n        const displayBufferedAmount = () => {\r\n            if (videoEl.buffered.length > 0) {\r\n                const bufferedAmount = Math.floor(videoEl.buffered.end(videoEl.buffered.length - 1));\r\n                videoPlayer.style.setProperty('--buffered-width', `${(bufferedAmount / seekSlider.max) * 100}%`);\r\n            }\r\n        }\r\n\r\n        if (videoEl.readyState > 0) {\r\n            displayDuration();\r\n            setSliderMax();\r\n            displayBufferedAmount();\r\n            if (videoEl.autoplay) {\r\n                raf = requestAnimationFrame(whilePlaying);\r\n                playIconContainer.classList.add(\"kg-video-hide\");\r\n                pauseIconContainer.classList.remove(\"kg-video-hide\");\r\n            }\r\n            if (videoEl.muted) {\r\n                unmuteIconContainer.classList.add(\"kg-video-hide\");\r\n                muteIconContainer.classList.remove(\"kg-video-hide\");\r\n            }\r\n        } else {\r\n            videoEl.addEventListener('loadedmetadata', () => {\r\n                displayDuration();\r\n                setSliderMax();\r\n                displayBufferedAmount();\r\n                if (videoEl.autoplay) {\r\n                    raf = requestAnimationFrame(whilePlaying);\r\n                    playIconContainer.classList.add(\"kg-video-hide\");\r\n                    pauseIconContainer.classList.remove(\"kg-video-hide\");\r\n                }\r\n                if (videoEl.muted) {\r\n                    unmuteIconContainer.classList.add(\"kg-video-hide\");\r\n                    muteIconContainer.classList.remove(\"kg-video-hide\");\r\n                }\r\n            });\r\n        }\r\n\r\n        videoElementContainer.onmouseover = () => {\r\n            if (!videoEl.loop) {\r\n                videoPlayerContainer.classList.remove(\"kg-video-hide-animated\");\r\n            }\r\n        }\r\n\r\n        videoElementContainer.onmouseleave = () => {\r\n            const isPlaying = !!(videoEl.currentTime > 0 && !videoEl.paused && !videoEl.ended && videoEl.readyState > 2);\r\n            if (isPlaying) {\r\n                videoPlayerContainer.classList.add(\"kg-video-hide-animated\");\r\n            }\r\n        }\r\n\r\n        videoElementContainer.addEventListener('click', () => {\r\n            if (!videoEl.loop) {\r\n                const isPlaying = !!(videoEl.currentTime > 0 && !videoEl.paused && !videoEl.ended && videoEl.readyState > 2);\r\n                if (isPlaying) {\r\n                    handleOnPause();\r\n                } else {\r\n                    handleOnPlay();\r\n                }\r\n            }\r\n        });\r\n\r\n        videoEl.onplay = () => {\r\n            largePlayIcon.classList.add(\"kg-video-hide-animated\");\r\n            videoOverlay.classList.add(\"kg-video-hide-animated\");\r\n            playIconContainer.classList.add(\"kg-video-hide\");\r\n            pauseIconContainer.classList.remove(\"kg-video-hide\");\r\n        };\r\n\r\n        const handleOnPlay = () => {\r\n            largePlayIcon.classList.add(\"kg-video-hide-animated\");\r\n            videoOverlay.classList.add(\"kg-video-hide-animated\");\r\n            playIconContainer.classList.add(\"kg-video-hide\");\r\n            pauseIconContainer.classList.remove(\"kg-video-hide\");\r\n            videoEl.play();\r\n            raf = requestAnimationFrame(whilePlaying);\r\n        }\r\n\r\n        const handleOnPause = () => {\r\n            pauseIconContainer.classList.add(\"kg-video-hide\");\r\n            playIconContainer.classList.remove(\"kg-video-hide\");\r\n            videoEl.pause();\r\n            cancelAnimationFrame(raf);\r\n        }\r\n\r\n        largePlayIcon.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            handleOnPlay();\r\n        });\r\n\r\n        playIconContainer.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            handleOnPlay();\r\n        });\r\n\r\n        pauseIconContainer.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            handleOnPause();\r\n        });\r\n\r\n        muteIconContainer.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            muteIconContainer.classList.add(\"kg-video-hide\");\r\n            unmuteIconContainer.classList.remove(\"kg-video-hide\");\r\n            videoEl.muted = false;\r\n        });\r\n\r\n        unmuteIconContainer.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            unmuteIconContainer.classList.add(\"kg-video-hide\");\r\n            muteIconContainer.classList.remove(\"kg-video-hide\");\r\n            videoEl.muted = true;\r\n        });\r\n\r\n        playbackRateContainer.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            let nextPlaybackRate = playbackRates[(currentPlaybackRateIdx + 1) % 5];\r\n            currentPlaybackRateIdx = currentPlaybackRateIdx + 1;\r\n            videoEl.playbackRate = nextPlaybackRate.rate;\r\n            playbackRateContainer.textContent = nextPlaybackRate.label;\r\n        });\r\n\r\n        videoEl.addEventListener('progress', displayBufferedAmount);\r\n\r\n        seekSlider.addEventListener('input', (e) => {\r\n            e.stopPropagation();\r\n            showRangeProgress(e.target);\r\n            currentTimeContainer.textContent = calculateTime(seekSlider.value);\r\n            if (!videoEl.paused) {\r\n                cancelAnimationFrame(raf);\r\n            }\r\n        });\r\n\r\n        seekSlider.addEventListener('change', (event) => {\r\n            event.stopPropagation();\r\n            videoEl.currentTime = seekSlider.value;\r\n            if (!videoEl.paused) {\r\n                requestAnimationFrame(whilePlaying);\r\n            }\r\n        });\r\n\r\n        volumeSlider.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n        });\r\n\r\n        seekSlider.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n        });\r\n\r\n        volumeSlider.addEventListener('input', (e) => {\r\n            e.stopPropagation();\r\n            const value = e.target.value;\r\n            showRangeProgress(e.target);\r\n            videoEl.volume = value / 100;\r\n        });\r\n    }\r\n\r\n    const videoCardElements = document.querySelectorAll('.kg-video-card');\r\n\r\n    for (let i = 0; i < videoCardElements.length; i++) {\r\n        handleVideoPlayer(videoCardElements[i]);\r\n    }\r\n})();"]}